services:
  movieservice:
    image: movieservice
    container_name: movieservice
    restart: always
    build:
      context: .
      dockerfile: backend/src/MovieService/Dockerfile
    ports:
      - "5003:8080"
      - "5013:8081"
    depends_on:
      - movie-db
      - movie-cache
      - elasticsearch
    environment:
      - ConnectionStrings__Cache=movie-cache:6379
      - MongoDbSettings__ConnectionUri=mongodb://root:example@movie-db:27017
      - ConnectionStrings__ElasticSearch=http://elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ~/.aspnet/https:/https:ro

  cinemaservice:
    image: cinemaservice.api
    container_name: cinemaservice
    restart: always
    build:
      context: .
      dockerfile: backend/src/CinemaService/CinemaService.API/Dockerfile
    ports:
      - "5002:8080"
      - "5012:8081"
    depends_on:
      - cinema-db
      - cinema-cache
      - elasticsearch
    environment:
      - ConnectionStrings__Cache=cinema-cache:6379
      - ConnectionStrings__Database=Server=cinema-db;port=5432;Database=CinemaDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__ElasticSearch=http://elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ~/.aspnet/https:/https:ro
        
  ticketservice:
    image: ticketservice
    container_name: ticketservice
    restart: always
    build:
      context: .
      dockerfile: backend/src/TicketService/Dockerfile
    ports:
      - "5005:8080"
      - "5015:8081"
    depends_on:
      - ticket-db
      - elasticsearch
    environment:
      - ConnectionStrings__Database=Server=ticket-db;port=5432;Database=TicketDb;User Id=postgres;Password=postgres;Include Error Detail=true
      - ConnectionStrings__ElasticSearch=http://elasticsearch:9200
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ~/.aspnet/https:/https:ro
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    container_name: elastic
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      
  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
  
  movie-db:
    image: mongo
    container_name: movie-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - movie-db-data:/data
        
  movie-cache:
    image: redis:latest
    container_name: movie-cache
    ports:
      - '6379:6379'
    volumes:
      - movie-cache:/data
      
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@movie-db:27017/
      ME_CONFIG_BASICAUTH: false
      
  cinema-db:
    image: postgres
    container_name: cinema-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CinemaDb
    ports:
      - "5432:5432"
    volumes:
      - cinema-db-data:/var/lib/postresql/data/

  cinema-cache:
    image: redis:latest
    container_name: cinema-cache
    ports:
      - '6380:6379'
    volumes:
      - cinema-cache:/data
  
  ticket-db:
    image: postgres
    container_name: ticket-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=TicketDb
    ports:
      - "5433:5432"
    volumes:
      - ticket-db-data:/var/lib/postresql/data/
      
volumes:
  movie-db-data:
  movie-cache:
  cinema-db-data:
  cinema-cache:
  ticket-db-data:
  elasticsearch-data: